openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Simple quotation of financial market'
  description: 'This is a simple API that provide simple quotation of financial market using the googleFinance'
paths: 

  /home:
    get:
      summary: Shows the API DOC
      operationId: API_DOC
      description: Return API DOC
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tickers"
        '500':
          description: 'Internal error' 
          
  /finance/api/v1/stock:
    get:
      summary: Searches for all tickers
      operationId: serachAllStocks
      description: Return all tickers on database
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tickers"
        '500':
          description: 'Internal error'  
          
  /finance/api/v1/stock/newTicker:
    post:
      summary: Save a new ticker
      operationId: saveTicker
      description: IDN
      responses:
        '200':
          description: item added
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tickers"
        '400':
          description: 'invalid input, ticker invalid'
        '409':
          description: an existing item already exists
        
  /finance/api/v1/stock/{tickers}:
    get:
      summary: Searches for a specific stock
      operationId: serach ticker
      description: |
        By passing in the appropriate option, you can search for available ticker in the system
      parameters: 
        - name: tickers
          in: path
          description: Ticker of stock to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ticker"
        '400':
          description: 'invalid input, ticker not found'
        '500':
          description: 'Internal error'
components:
  schemas:
    tickerObj:
      required:
        - ticker
        - price
        - percentChange
        - volume
        - currency
        - date
        - high
        - low
        - dataDelay
      properties:
        ticker:
          type: string
          example: "PETR4"
        price:
          type: number
          example: 20
        percentChange:
          type: integer
          example: 3
        volume:
          type: integer
          example: 1234
        currency:
          type: integer
          example: BRL
        date:
          type: string
          example: '2016-08-29T09:12:33.001Z'
        high:
          type: number
          example: 21
        low:
          type: integer
          example: 19.5
        dateDelay:
          type: string
          example: '2016-08-29T09:12:33.001Z'
          
    tickerArrayObj:
          required:
            - ticker
            - price
            - percentChange
            - volume
            - currency
            - date
            - high
            - low
            - dataDelay
            - tickerObj
          properties:
            ticker:
              type: string
              example: "PETR4"
            price:
              type: number
              example: 20
            percentChange:
              type: integer
              example: 3
            volume:
              type: integer
              example: 1234
            currency:
              type: integer
              example: BRL
            date:
              type: string
              example: '2016-08-29T09:12:33.001Z'
            high:
              type: number
              example: 21
            low:
              type: integer
              example: 19.5
            dateDelay:
              type: string
              example: '2016-08-29T09:12:33.001Z'
          $ref: '#/components/schemas/tickerObj'
          
    ticker:
      type: object
      required:
        - status
        - Asset
        - about stock market data
      properties:
        status:
          type: string
          example: "Successful"
        Asset:
          type: array
          items: 
            $ref: '#/components/schemas/tickerObj'
        about stock market data:
          type: string
          example: "www.teste.com.br"
          
    tickers:
      type: object
      required:
        - status
        - Asset
        - about stock market data
      properties:
        status:
          type: string
          example: "Successful"
        Asset:
          type: array
          items: 
            $ref: '#/components/schemas/tickerArrayObj'
        about stock market data:
          type: string
          example: "www.teste.com.br"      

# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Tracun1/Finance/1.0.0